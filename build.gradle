apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

configurations {
    providedCompile
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    javaEncoding = "UTF-8"
}

javadoc {
    options.addStringOption("locale","ko_KR");
    options.addStringOption("encoding","UTF-8");
    options.addStringOption("charset","UTF-8");
    options.addStringOption("docencoding","UTF-8");
}

buildscript {
    repositories {
     	mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

war {
    baseName = "BasicBootProject"
    version = "1.0.1-" + new Date().format("yyyyMMdd-HHmmss")
    exclude("build/**")
    classpath configurations.providedCompile
    ant.propertyfile(
            file: "src/main/resources/properties/version.properties") {
        entry( key: "project.version", value: version)
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile("org.springframework.boot:spring-boot-starter-tomcat") 
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.data:spring-data-commons:1.11.1.RELEASE")
    
    
    compile 'com.google.guava:guava-gwt:19.0-rc3'
    
    //template
    compile('org.freemarker:freemarker:2.3.23')    
    
    //db(hibernate,orm,tx)
    compile("org.springframework:spring-tx")
	compile("org.springframework:spring-orm")
    compile('org.hibernate:hibernate-core:4.3.11.Final')
    compile("mysql:mysql-connector-java")
    compile("org.apache.tomcat:tomcat-jdbc:8.0.28")
    
    //test
    testCompile("junit:junit")
	testCompile("org.hamcrest:hamcrest-all:1.3")
	testCompile("org.mockito:mockito-all:1.9.5")
	testCompile("org.springframework:spring-test")
    
    //io
    compile("commons-codec:commons-codec:1.9")
	compile("commons-fileupload:commons-fileupload:1.3")
	compile("commons-io:commons-io:2.4")
	compile("org.apache.commons:commons-lang3:3.1")

	compile("org.apache.httpcomponents:httpclient") {
		exclude(group: "commons-codec")
	}
	
	//validator
	compile("org.hibernate:hibernate-validator")
	
	//time
	compile("joda-time:joda-time")
	
	compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.4.0")
	compile("com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.4.0")

}

task developerBuild {
    exec {
        commandLine = ['cmd', '/c', 'grunt']
        ignoreExitValue = true
    }
}
